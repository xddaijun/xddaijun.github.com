---
layout: default
title: Pinyin to Character
---
h1. Pinyin to Character

<p>用户输入拼音对拼音进行识别，一向是输入法来做的事情。在这里调用QQ的云端输入法来对输入的拼音进行识别，从而具备很高的匹配率。</p>
<p>代码如下，详见 &nbsp;<a href="https://github.com/xddaijun/somecode/blob/master/pycharacter/getwords.py">https://github.com/xddaijun/somecode/blob/master/pycharacter/getwords.py</a></p>
<br/>
<div class="source" style="font-family: '[object HTMLOptionElement]', 'Courier New'; color: rgb(0, 0, 0); background-color: rgb(249, 247, 237); "> <span style="color: rgb(96, 160, 176); font-style: italic; "># -*- coding: utf-8 -*-</span><br> <span style="color: rgb(64, 112, 160); font-style: italic; ">&quot;&quot;"</span><br> <span style="color: rgb(64, 112, 160); font-style: italic; ">Created on Sat Jun 25 16:37:12 2011</span><br> <br> <span style="color: rgb(64, 112, 160); font-style: italic; ">@author: mark</span><br> <span style="color: rgb(64, 112, 160); font-style: italic; ">&quot;&quot;"</span><br> <br> <span style="color: rgb(0, 0, 0); ">from</span> <span style="color: rgb(14, 132, 181); font-weight: bold; ">urllib</span> <span style="color: rgb(0, 0, 0); ">import</span> <span style="color: rgb(0, 0, 0); ">urlopen</span><br> <span style="color: rgb(0, 0, 0); ">import</span> <span style="color: rgb(14, 132, 181); font-weight: bold; ">simplejson</span> <span style="color: rgb(0, 0, 0); ">as</span> <span style="color: rgb(14, 132, 181); font-weight: bold; ">json</span><br> <span style="color: rgb(0, 0, 0); ">import</span> <span style="color: rgb(14, 132, 181); font-weight: bold; ">time</span><br> <span style="color: rgb(0, 0, 0); ">import</span> <span style="color: rgb(14, 132, 181); font-weight: bold; ">re</span><br> <br> <br> <span style="color: rgb(0, 112, 32); font-weight: bold; ">def</span> <span style="color: rgb(6, 40, 126); ">getQQWords</span>(<span style="color: rgb(0, 0, 0); ">preword</span><span style="color: rgb(0, 0, 0); ">,</span><span style="color: rgb(0, 0, 0); ">pys</span><span style="color: rgb(0, 0, 0); ">,</span><span style="color: rgb(0, 0, 0); ">curNum</span><span style="color: rgb(0, 0, 0); ">):</span> <br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">global</span> <span style="color: rgb(0, 0, 0); ">wordsSet</span>&nbsp;&nbsp;&nbsp; <br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">if</span>(<span style="color: rgb(0, 112, 32); ">len</span>(<span style="color: rgb(0, 0, 0); ">pys</span>)<span style="color: rgb(102, 102, 102); ">&lt;</span><span style="color: rgb(64, 160, 112); ">1</span> <span style="color: rgb(0, 112, 32); font-weight: bold; ">and</span> <span style="color: rgb(0, 0, 0); ">preword</span> <span style="color: rgb(0, 112, 32); font-weight: bold; ">not</span> <span style="color: rgb(0, 112, 32); font-weight: bold; ">in</span> <span style="color: rgb(0, 0, 0); ">wordsSet</span><span style="color: rgb(0, 0, 0); ">):</span>&nbsp;&nbsp;&nbsp;&nbsp; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">wordsSet</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">append</span>(<span style="color: rgb(0, 0, 0); ">preword</span>)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">return</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">if</span> <span style="color: rgb(0, 0, 0); ">curNum</span><span style="color: rgb(102, 102, 102); ">&gt;</span><span style="color: rgb(64, 160, 112); ">1</span><span style="color: rgb(0, 0, 0); ">:</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">nextNum</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">curNum</span><span style="color: rgb(102, 102, 102); ">-</span><span style="color: rgb(64, 160, 112); ">1</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">else</span><span style="color: rgb(0, 0, 0); ">:</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">nextNum</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(64, 160, 112); ">1</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">pylen</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 112, 32); ">len</span>(<span style="color: rgb(0, 0, 0); ">pys</span>)<br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">sout</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">json</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">load</span>(<span style="color: rgb(0, 0, 0); ">urlopen</span>(<span style="color: rgb(64, 112, 160); ">&quot;http://ime.qq.com/fcgi-bin/getword?q=</span><span style="color: rgb(112, 160, 208); font-style: italic; ">%s</span><span style="color: rgb(64, 112, 160); ">&quot;</span> <span style="color: rgb(102, 102, 102); ">%</span> <span style="color: rgb(0, 0, 0); ">pys</span>))<br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(64, 160, 112); ">0</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">while</span>(<span style="color: rgb(0, 0, 0); ">pylen</span><span style="color: rgb(102, 102, 102); ">&gt;=</span><span style="color: rgb(64, 160, 112); ">1</span> <span style="color: rgb(0, 112, 32); font-weight: bold; ">and</span> <span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">&lt;</span><span style="color: rgb(0, 0, 0); ">curNum</span><span style="color: rgb(0, 0, 0); ">):</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">getQQWords</span>(<span style="color: rgb(0, 0, 0); ">preword</span><span style="color: rgb(102, 102, 102); ">+</span><span style="color: rgb(0, 0, 0); ">sout</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(64, 112, 160); ">&#39;rs&#39;</span><span style="color: rgb(0, 0, 0); ">][</span><span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(0, 0, 0); ">],</span><span style="color: rgb(0, 0, 0); ">pys</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(0, 112, 32); ">int</span>(<span style="color: rgb(0, 0, 0); ">sout</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(64, 112, 160); ">&#39;rsn&#39;</span><span style="color: rgb(0, 0, 0); ">][</span><span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(0, 0, 0); ">]):],</span><span style="color: rgb(0, 0, 0); ">nextNum</span>)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">+</span><span style="color: rgb(64, 160, 112); ">1</span><br> <br> <span style="color: rgb(0, 112, 32); font-weight: bold; ">def</span> <span style="color: rgb(6, 40, 126); ">parsePY</span>(<span style="color: rgb(0, 0, 0); ">inputStr</span><span style="color: rgb(0, 0, 0); ">):</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">global</span> <span style="color: rgb(0, 0, 0); ">wordsSet</span>&nbsp;&nbsp;&nbsp; <br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">outwords</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">[]</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">match</span> <span style="color: rgb(102, 102, 102); ">=</span> <span style="color: rgb(0, 0, 0); ">re</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">search</span>(<span style="color: rgb(64, 112, 160); ">r&#39;^[a-zA-Z</span><span style="color: rgb(64, 112, 160); font-weight: bold; ">\&#39;</span><span style="color: rgb(64, 112, 160); ">\s]+$&#39;</span><span style="color: rgb(0, 0, 0); ">,</span> <span style="color: rgb(0, 0, 0); ">inputStr</span>)<br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">if</span> <span style="color: rgb(0, 0, 0); ">match</span><span style="color: rgb(0, 0, 0); ">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">matches</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">re</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">split</span>(<span style="color: rgb(64, 112, 160); ">&quot;\s&quot;</span><span style="color: rgb(0, 0, 0); ">,</span><span style="color: rgb(0, 0, 0); ">inputStr</span>)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(64, 160, 112); ">0</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">if</span> <span style="color: rgb(0, 112, 32); ">len</span>(<span style="color: rgb(0, 0, 0); ">matches</span>)<span style="color: rgb(102, 102, 102); ">&gt;</span><span style="color: rgb(64, 160, 112); ">1</span><span style="color: rgb(0, 0, 0); ">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">outwords</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">append</span>(<span style="color: rgb(64, 112, 160); ">&quot;&quot;</span>)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">while</span> <span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">&lt;</span><span style="color: rgb(0, 112, 32); ">len</span>(<span style="color: rgb(0, 0, 0); ">matches</span><span style="color: rgb(0, 0, 0); ">):</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">wordsSet</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">[]</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">getQQWords</span>(<span style="color: rgb(64, 112, 160); ">&quot;&quot;</span><span style="color: rgb(0, 0, 0); ">,</span><span style="color: rgb(0, 0, 0); ">matches</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(0, 0, 0); ">],</span><span style="color: rgb(64, 160, 112); ">1</span>)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">outwords</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(64, 160, 112); ">0</span><span style="color: rgb(0, 0, 0); ">]</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">outwords</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(64, 160, 112); ">0</span><span style="color: rgb(0, 0, 0); ">]</span><span style="color: rgb(102, 102, 102); ">+</span><span style="color: rgb(0, 0, 0); ">wordsSet</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(64, 160, 112); ">0</span><span style="color: rgb(0, 0, 0); ">]</span><span style="color: rgb(102, 102, 102); ">+</span><span style="color: rgb(64, 112, 160); ">&quot; &quot;</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(102, 102, 102); ">+</span><span style="color: rgb(64, 160, 112); ">1</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">else</span><span style="color: rgb(0, 0, 0); ">:</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">wordsSet</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">[]</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">getQQWords</span>(<span style="color: rgb(64, 112, 160); ">&quot;&quot;</span><span style="color: rgb(0, 0, 0); ">,</span><span style="color: rgb(0, 0, 0); ">matches</span><span style="color: rgb(0, 0, 0); ">[</span><span style="color: rgb(0, 0, 0); ">ix</span><span style="color: rgb(0, 0, 0); ">],</span><span style="color: rgb(64, 160, 112); ">3</span>)<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">outwords</span><span style="color: rgb(102, 102, 102); ">=</span><span style="color: rgb(0, 0, 0); ">wordsSet</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">return</span> <span style="color: rgb(0, 0, 0); ">outwords</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br> <br> <span style="color: rgb(0, 112, 32); font-weight: bold; ">def</span> <span style="color: rgb(6, 40, 126); ">main</span><span style="color: rgb(0, 0, 0); ">():</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">for</span> <span style="color: rgb(0, 0, 0); ">w</span> <span style="color: rgb(0, 112, 32); font-weight: bold; ">in</span> <span style="color: rgb(0, 0, 0); ">parsePY</span>(<span style="color: rgb(64, 112, 160); ">&quot;woshiyigerxi&#39;anshi&quot;</span><span style="color: rgb(0, 0, 0); ">):</span><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">print</span> <span style="color: rgb(0, 0, 0); ">w</span><br> <br> <span style="color: rgb(0, 112, 32); font-weight: bold; ">if</span> <span style="color: rgb(0, 0, 0); ">__name__</span> <span style="color: rgb(102, 102, 102); ">==</span> <span style="color: rgb(64, 112, 160); ">&#39;__main__&#39;</span><span style="color: rgb(0, 0, 0); ">:</span><br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">start</span> <span style="color: rgb(102, 102, 102); ">=</span> <span style="color: rgb(0, 0, 0); ">time</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">clock</span>()<br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">main</span>()<br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 0, 0); ">end</span> <span style="color: rgb(102, 102, 102); ">=</span> <span style="color: rgb(0, 0, 0); ">time</span><span style="color: rgb(102, 102, 102); ">.</span><span style="color: rgb(0, 0, 0); ">clock</span>()<br> &nbsp;&nbsp;&nbsp; <span style="color: rgb(0, 112, 32); font-weight: bold; ">print</span> <span style="color: rgb(64, 112, 160); ">&#39;use time :</span><span style="color: rgb(112, 160, 208); font-style: italic; ">%f</span><span style="color: rgb(64, 112, 160); ">&#39;</span> <span style="color: rgb(102, 102, 102); ">%</span> (<span style="color: rgb(0, 0, 0); ">end</span><span style="color: rgb(102, 102, 102); ">-</span><span style="color: rgb(0, 0, 0); ">start</span>)<br></div>

  
